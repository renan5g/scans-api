// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ObraStatus {
  ATIVO
  COMPLETO
  CANCELADO
  HIATO
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  username String  @unique
  password String
  avatar   String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}

model Obra {
  id          String     @id @default(uuid())
  title       String     @unique
  cover       String?
  sinopse     String?
  demographic String?
  format      String?
  author      String?
  artist      String?
  status      ObraStatus @default(ATIVO)

  alternativesTitles AlternativeTitle[]
  categories         CategoriesOnObras[]
  chapters           ChaptersOnObras[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("obras")
}

model AlternativeTitle {
  id     String @id @default(uuid())
  title  String
  obra   Obra   @relation(fields: [obraId], references: [id])
  obraId String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("alternatives_titles")
}

model Category {
  id    String              @id @default(uuid())
  name  String              @unique
  obras CategoriesOnObras[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("categories")
}

model Page {
  id        String   @id @default(uuid())
  number    Int
  url       String
  Chapter   Chapter? @relation(fields: [chapterId], references: [id])
  chapterId String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("pages")
}

model Chapter {
  id              String            @id @default(uuid())
  title           String
  number          Int
  url             String
  cover           String
  pages           Page[]
  ChaptersOnObras ChaptersOnObras[]

  @@map("chapters")
}

model CategoriesOnObras {
  obra       Obra     @relation(fields: [obraId], references: [id])
  obraId     String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  assignedAt DateTime @default(now())

  @@id([obraId, categoryId])
}

model ChaptersOnObras {
  obra       Obra     @relation(fields: [obraId], references: [id])
  obraId     String
  chapter    Chapter  @relation(fields: [chapterId], references: [id])
  chapterId  String
  assignedAt DateTime @default(now())

  @@id([obraId, chapterId])
}
